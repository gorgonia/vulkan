name: Go with Vulkan

on: [push, pull_request]

env:
  GOPROXY: "https://proxy.golang.org"

jobs:
  stable-go:
    name: Build and test on latest stable Go release - Linux/amd64
    env:
      GOVERSION: '1.16.x'
    runs-on: ubuntu-latest
    container: markkremer/swiftshader:latest
    steps:
      # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          stable: 'true'
          go-version: ${{ env.GOVERSION }}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        if: steps.go-cache-paths.outputs.go-build != ''
        id: build-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-build-
      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        if: steps.go-cache-paths.outputs.go-mod != ''
        id: build-mod-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-mod-

      - name: Install Dependencies
        if: steps.build-mod-cache.outputs.cache-hit != 'true'
        run: |
          #GOARCH=arm GOOS=linux go get -t .
          GOARCH=amd64 GOOS=linux go get -t .
          #GOARCH=amd64 GOOS=darwin go get -t .

      - name: Build (all platforms)
        run: |
          make
          #GOARCH=arm GOOS=linux go build .
          GOARCH=amd64 GOOS=linux go build .
          #GOARCH=amd64 GOOS=darwin go build .

      - name: Test
        run: |
          go run cmd/list_devices/main.go
          go test -race -timeout 20m
